// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20190523093347_Fluent Api")]
    partial class FluentApi
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview5.19227.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Claim", b =>
                {
                    b.Property<int>("ClaimIdenfier")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClaimNo");

                    b.Property<string>("Inser_User");

                    b.Property<string>("Memo")
                        .HasMaxLength(100);

                    b.Property<int>("PolicyYear");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("ClaimIdenfier");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("DataAccess.PIClaim", b =>
                {
                    b.Property<int>("PIClaimId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Amount");

                    b.Property<int>("ClaimIdenfier");

                    b.Property<int?>("ClaimIdenfier1");

                    b.Property<decimal?>("Deductible");

                    b.HasKey("PIClaimId");

                    b.HasIndex("ClaimIdenfier1");

                    b.ToTable("PIClaim");
                });

            modelBuilder.Entity("DataAccess.PIClaim", b =>
                {
                    b.HasOne("DataAccess.Claim", "Claim")
                        .WithMany("PiClaimsList")
                        .HasForeignKey("ClaimIdenfier1");
                });
#pragma warning restore 612, 618
        }
    }
}
